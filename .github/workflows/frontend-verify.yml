name: "Frontend Lint & Compile check"

on:
  push:
    paths:
      - "frontend/**"
  pull_request:
    paths:
      - "frontend/**"

jobs:
  lint-and-compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18.10.0'
      - name: Install dependencies 
        working-directory: frontend
        run: npm ci
      - name: Run lint
        working-directory: frontend
        run: npm run lint
      - name: Run build frontend
        working-directory: frontend
        run: |
          REACT_APP_BUSINESS=true 
          REACT_APP_CONSOLE_GIT_SHA=$(echo $GITHUB_SHA | cut -c 1-6)
          REACT_APP_CONSOLE_GIT_REF=$GITHUB_REF_NAME 
          REACT_APP_BUILD_TIMESTAMP=$(date +%s) 
          REACT_APP_DEV_HINT=true
          npm run build 
  
  e2e-test:
    needs: "lint-and-compile"
    timeout-minutes: 60
    runs-on: ubuntu-latest
    container: ubuntu:latest
    services:
      redpanda:
        image: docker.redpanda.com/redpandadata/redpanda:v23.3.9
        volumes:
          - config:/etc/redpanda
        ports:
          - 8081:8081
          - 8082:8082
          - 9092:9092
          - 9644:9644
      owlshop:
        image: quay.io/cloudhut/owl-shop:sha-5211ad3
        env:
          CONFIG_FILEPATH: /tmp/owlshop.yaml
        volumes:
          - config:/tmp
      connect:
        image: docker.cloudsmith.io/redpanda/connectors-unsupported/connectors:v1.0.0-670a78a
        env:
          CONNECT_CONFIGURATION: |
            key.converter=org.apache.kafka.connect.converters.ByteArrayConverter
            value.converter=org.apache.kafka.connect.converters.ByteArrayConverter
            group.id=connectors-cluster
            offset.storage.topic=_internal_connectors_offsets
            config.storage.topic=_internal_connectors_configs
            status.storage.topic=_internal_connectors_status
            config.storage.replication.factor=-1
            offset.storage.replication.factor=-1
            status.storage.replication.factor=-1
            offset.flush.interval.ms=1000
            producer.linger.ms=50
            producer.batch.size=131072
          CONNECT_BOOTSTRAP_SERVERS: redpanda:9092
          CONNECT_GC_LOG_ENABLED: "false"
          CONNECT_HEAP_OPTS: -Xms512M -Xmx512M
          CONNECT_LOG_LEVEL: info
          CONNECT_TOPIC_LOG_ENABLED: "true"
        ports:
          - 8083:8083
    steps:
      - name: Update CA Certificates
        run: apt-get update && apt-get install -y --no-install-recommends ca-certificates && apt-get install -y --no-install-recommends git
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies 
        working-directory: frontend
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Install dependencies
        working-directory: backend/cmd/api
        run: go get .
      - name: Build
        working-directory: backend/cmd/api
        run: go build -buildvcs=false -v ./...
      # - name: Start dependencies
      #   uses: isbang/compose-action@v1.5.1
      #   with:
      #     compose-file: "./frontend/tests/config/docker-compose.yaml"
      #     down-flags: "--volumes"
      - name: Run Playwright tests
        working-directory: frontend
        run: npm run e2e-test
